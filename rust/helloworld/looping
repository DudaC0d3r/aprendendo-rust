Em Rust, *looping* (ou laços de repetição) é uma forma de executar um bloco de código várias vezes. Rust tem três formas principais de fazer isso:

---

### 1. `loop`
Um laço infinito — só para quando você usa `break`:

```rust
fn main() {
    let mut count = 0;

    loop {
        count += 1;
        println!("Contando: {}", count);

        if count == 5 {
            break; // sai do loop quando count for 5
        }
    }
}
```

---

### 2. `while`
Executa enquanto uma condição for verdadeira:

```rust
fn main() {
    let mut count = 0;

    while count < 5 {
        println!("Contando: {}", count);
        count += 1;
    }
}
```

---

### 3. `for`
Ideal para iterar sobre coleções, intervalos e iteradores:

```rust
fn main() {
    for i in 0..5 { // de 0 até 4
        println!("Valor: {}", i);
    }

    let vetor = [10, 20, 30];
    for valor in vetor.iter() {
        println!("Valor do vetor: {}", valor);
    }
}
```

---

Se quiser, posso te mostrar um exemplo mais prático ou explicar como controlar loops com `continue`, `break`, e até usar `loop` com rótulos. Quer ver algum caso específico?
